SelectionSort(A[0..n − 1])
//Sorts a given array by selection sort
//Input: An array A[0..n − 1] of orderable elements
//Output: Array A[0..n − 1] sorted in nondecreasing order
for i ← 0 to n − 2 do
min ← i
for j ← i + 1 to n − 1 do
if A[j ] < A[min] min ← j
swap A[i] and A[min]


PROGRAM:
#include <stdio.h>
#include<time.h>
clock_t start, end;
double cpu_time;
void swap(int *a, int *b) {
  int temp = *a;
  *a = *b;
  *b = temp;
}

void selectionSort(int array[], int size) {
  for (int i = 0; i < size - 1; i++) {
    int min = i;
    for (int j = i + 1; j < size; j++) {
      if (array[j] < array[min])
        min = j;
    }
    swap(&array[min], &array[i]);
  }
}
// driver code
int main() {
  int data[] = {20, 12, 10, 15, 2};
  int size = sizeof(data) / sizeof(data[0]);
  start = clock();
  selectionSort(data, size);
  end = clock();
  printf("Sorted array in Acsending Order:\n");
 for (int i = 0; i < size; ++i) {
    printf("%d  ", data[i]);
  }
   cpu_time = ((double)(end-start))/CLOCKS_PER_SEC;
  printf("the time taken is %d",cpu_time);
}
